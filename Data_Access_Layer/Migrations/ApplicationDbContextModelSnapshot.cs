// <auto-generated />
using System;
using Data_Access_Layer.Repositories.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_status");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("account");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("cart_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("cart");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("cart_item_id");

                    b.Property<Guid>("CartId")
                        .HasColumnType("char(36)")
                        .HasColumnName("cart_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<Guid>("IngredientProductId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.HasIndex("IngredientProductId");

                    b.ToTable("cart_item");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("category_name");

                    b.Property<string>("CategoryStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("category_status");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("category_type");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("customer_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tax_code");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Empoyee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("empoyee_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("RefCode")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ref_code");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("empoyee");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("image_id");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image_url");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expired_date");

                    b.Property<string>("FoodSafetyCertification")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("food_safety_certification");

                    b.Property<string>("IngredientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ingredient_code");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ingredient_name");

                    b.Property<string>("IngredientStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ingredient_status");

                    b.Property<bool>("IsSale")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_sale");

                    b.Property<double>("PriceOrigin")
                        .HasColumnType("double")
                        .HasColumnName("price_origin");

                    b.Property<double>("PricePromotion")
                        .HasColumnType("double")
                        .HasColumnName("price_promotion");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("QuantityPerCarton")
                        .HasColumnType("int")
                        .HasColumnName("quantity_per_carton");

                    b.Property<float>("Rate")
                        .HasColumnType("float")
                        .HasColumnName("rate");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("supplier");

                    b.Property<int>("Unit")
                        .HasColumnType("int")
                        .HasColumnName("unit");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.Property<float>("WeightPerBag")
                        .HasColumnType("float")
                        .HasColumnName("weight_per_bag");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ingredient");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_product_id");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double")
                        .HasColumnName("total_price");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("ingredient_product");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientPromotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_promotion_id");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("promotion_id");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PromotionId");

                    b.ToTable("ingredient_promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_recipe_id");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("recipe_id");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("ingredient_recipe");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("feedback_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("comment");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<double>("Rate")
                        .HasColumnType("double")
                        .HasColumnName("rate");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ingredient_review");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("order_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("AddressShipping")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("address_shipping");

                    b.Property<string>("EmailShipping")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("email_shipping");

                    b.Property<string>("FullNameShipping")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("full_name_shipping");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("order_code");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("order_status");

                    b.Property<string>("PhoneShipping")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_shipping");

                    b.Property<double>("PriceAffterPromotion")
                        .HasColumnType("double")
                        .HasColumnName("price_affter_promotion");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("RefCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ref_code");

                    b.Property<double>("TotlaPrice")
                        .HasColumnType("double")
                        .HasColumnName("total_price");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("order_info");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("order_detail_id");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ingredient_id");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("OrderId");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.OrderPromotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("order_promotion_id");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)")
                        .HasColumnName("order_id");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("promotion_id");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PromotionId");

                    b.ToTable("order_promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("payment_id");

                    b.Property<double>("AmountPaid")
                        .HasColumnType("double")
                        .HasColumnName("amount_paid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payment_status");

                    b.Property<double>("RemainingAmount")
                        .HasColumnType("double")
                        .HasColumnName("remaining_amount");

                    b.Property<double>("TotlaPrice")
                        .HasColumnType("double")
                        .HasColumnName("total_price");

                    b.Property<string>("TranscationId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("transcation_id");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("promotion_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<string>("PromotionCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("promotion_code");

                    b.Property<Guid>("PromotionDetailId")
                        .HasColumnType("char(36)")
                        .HasColumnName("promotion_detail_id");

                    b.Property<string>("PromotionType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("promotion_type");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("PromotionDetailId")
                        .IsUnique();

                    b.ToTable("promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.PromotionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("promotion_detail_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("description");

                    b.Property<float>("DiscountValue")
                        .HasColumnType("float")
                        .HasColumnName("discount_value");

                    b.Property<double>("MaxValue")
                        .HasColumnType("double")
                        .HasColumnName("max_value");

                    b.Property<double>("MiniValue")
                        .HasColumnType("double")
                        .HasColumnName("mini_value");

                    b.Property<string>("PromotionName")
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("promotion_name");

                    b.HasKey("Id");

                    b.ToTable("promotion_detail");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("recipe_id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)")
                        .HasColumnName("category_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("RecipeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("recipe_title");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("recipe");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Cart", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Account", "Account")
                        .WithOne("Cart")
                        .HasForeignKey("Data_Access_Layer.Repositories.Entities.Cart", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.CartItem", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.IngredientProduct", "IngredientProduct")
                        .WithMany()
                        .HasForeignKey("IngredientProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("IngredientProduct");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Customer", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("Data_Access_Layer.Repositories.Entities.Customer", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Empoyee", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Account", "Account")
                        .WithOne("Empoyee")
                        .HasForeignKey("Data_Access_Layer.Repositories.Entities.Empoyee", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Image", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany("Images")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Ingredient", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Category", "Category")
                        .WithMany("Ingredients")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientProduct", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientPromotion", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientPromotions")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientRecipe", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientRecipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.Recipe", "Recipe")
                        .WithMany("IngredientRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.IngredientReview", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Account", "Account")
                        .WithMany("IngredientReviews")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientReviews")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Order", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.OrderDetail", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.Order", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.OrderPromotion", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Order", "Order")
                        .WithMany("OrderPromotions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Repositories.Entities.Promotion", "Promotion")
                        .WithMany("OrderPromotions")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Payment", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Promotion", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.PromotionDetail", "PromotionDetail")
                        .WithOne("Promotion")
                        .HasForeignKey("Data_Access_Layer.Repositories.Entities.Promotion", "PromotionDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromotionDetail");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Recipe", b =>
                {
                    b.HasOne("Data_Access_Layer.Repositories.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Account", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("Customer");

                    b.Navigation("Empoyee");

                    b.Navigation("IngredientReviews");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Category", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Ingredient", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("IngredientPromotions");

                    b.Navigation("IngredientRecipes");

                    b.Navigation("IngredientReviews");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderPromotions");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Promotion", b =>
                {
                    b.Navigation("OrderPromotions");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.PromotionDetail", b =>
                {
                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Data_Access_Layer.Repositories.Entities.Recipe", b =>
                {
                    b.Navigation("IngredientRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
